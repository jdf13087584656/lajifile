<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlkj.website.mapper.UserMapper">

    <!--回收员新增 -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="uid" keyColumn="uid"
            parameterType="com.xlkj.website.model.UserDto">

        insert into lp_user(
            uid,
            account,
            password,
            type,
            user_name,
            cell_number,
            is_deleted,
            memo,
            create_time
        ) values (
            #{uid},
            #{account},
            #{password},
            #{type},
            #{userName},
            #{cellNumber},
            0,
            #{memo},
            now()
        );
    </insert>

    <!--回收员修改 -->
    <update id="modifyUser" parameterType="com.xlkj.website.model.UserDto">
        update lp_user
        <set>
            <if test="null != password and '' != password">
                password = #{password},
            </if>
            <if test="null != userName and '' != userName">
                user_name = #{userName},
            </if>
            <if test="null != cellNumber and '' != cellNumber">
                cell_number = #{cellNumber},
            </if>
            <if test="null != isDeleted and '' != isDeleted">
                is_deleted = #{isDeleted}
            </if>
        </set>
        where uid=#{uid}
    </update>

    <!-- 回收员列表 -->
    <select id="listUsers" parameterType="com.xlkj.website.model.SearchUserDto" resultType="com.xlkj.website.model.UserDto">
        select
        lu.uid uid,
        lu.account account,
        lu.password password,
        lu.type type,
        lu.user_name userName,
        lu.cell_number cellNumber,
        lu.is_deleted isDeleted,
        lu.memo memo,
        lu.create_time createTime,
        uuu.a quantityCompletion,
        mmm.a unfinished
        from lp_user lu
        left join(select count(oid) a,receive_id uid from lp_order where order_state=4 group by uid)uuu on uuu.uid=lu.uid
        left join(select count(oid) a,receive_id uid from lp_order where order_state in (2,3) group by uid)mmm on mmm.uid=lu.uid
        where is_deleted=0 and type=2
        <if test="null != keywords and '' != keywords">
            and (user_name LIKE "%"#{keywords}"%" or account LIKE "%"#{keywords}"%")
        </if>
        order by create_time desc
    </select>

    <!-- 回收员详情 -->
    <select id="listUser" parameterType="com.xlkj.website.model.SearchUserDto" resultType="com.xlkj.website.model.UserDto">
        select
        lu.uid uid,
        lu.account account,
        lu.user_name userName,
        lu.cell_number cellNumber,
        uuu.a quantityCompletion,
        mmm.a unfinished
        from lp_user lu
        left join(select count(oid) a,receive_id uid from lp_order where order_state=4 group by uid)uuu on uuu.uid=lu.uid
        left join(select count(oid) a,receive_id uid from lp_order where order_state in (2,3) group by uid)mmm on mmm.uid=lu.uid
        where lu.is_deleted=0 and lu.type=2
            and lu.uid=#{uid}
    </select>

    <!-- 回收员已完成数量 -->
    <select id="quantityCompletion" resultType="java.lang.Integer">
        select
        count(oid)
        from lp_order
        where receive_id = #{uid} and order_state=4
    </select>
    <!-- 回收员未完成数量 -->
    <select id="unfinished" resultType="java.lang.Integer">
        select
        count(oid)
        from lp_order
        where receive_id = #{uid} and order_state in(2,3)
    </select>

    <!-- 账号验证 -->
    <select id="searchAccount" resultType="com.xlkj.website.model.UserDto">
        select
        uid uid,
        account account,
        password password,
        type type,
        user_name userName,
        cell_number cellNumber,
        is_deleted isDeleted,
        create_time createTime,
        memo memo
        from lp_user
        where is_deleted=0
            and account = #{account}
    </select>


</mapper>